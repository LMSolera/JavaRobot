/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 
package interfaceGraph;

/**
 *
 * @author hduar
 
public class PDFUploader extends javax.swing.JPanel {

    /**
     * Creates new form PDFUploader
     
    public PFUploader() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables

*/

import javax.swing.*;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.io.File;

public class PDFUploader extends JFrame {

    private JButton uploadLicitacaoBtn;
    private JButton uploadPropostaBtn;
    private JLabel statusLabel;

    public PDFUploader() {
        setTitle("Uploader de PDFs");
        setSize(400, 180);
        setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        setLocationRelativeTo(null);

        uploadLicitacaoBtn = new JButton("Upload Licitação");
        uploadPropostaBtn = new JButton("Upload Proposta");
        statusLabel = new JLabel("Selecione um arquivo para enviar", SwingConstants.CENTER);

        // Cada botão com sua ação individual
        uploadLicitacaoBtn.addActionListener(this::uploadLicitacao);
        uploadPropostaBtn.addActionListener(this::uploadProposta);

        // Interface mais agradável
        setLayout(new BorderLayout());

        JPanel buttonPanel = new JPanel(new GridLayout(1, 2, 10, 10));
        buttonPanel.setBorder(BorderFactory.createEmptyBorder(20, 20, 10, 20));
        buttonPanel.add(uploadLicitacaoBtn);
        buttonPanel.add(uploadPropostaBtn);

        add(buttonPanel, BorderLayout.CENTER);
        add(statusLabel, BorderLayout.SOUTH);
    }

    private void uploadLicitacao(ActionEvent e) {
        fazerUpload("Licitação");
    }

    private void uploadProposta(ActionEvent e) {
        fazerUpload("Proposta");
    }

    private void fazerUpload(String tipo) {
        JFileChooser chooser = new JFileChooser();
        int result = chooser.showOpenDialog(this);
        if (result == JFileChooser.APPROVE_OPTION) {
            File arquivo = chooser.getSelectedFile();
            // Aqui você pode guardar o caminho, abrir o PDF, etc.
            statusLabel.setText("Arquivo de " + tipo + " selecionado: " + arquivo.getName());
            System.out.println("[" + tipo + "] Caminho do arquivo: " + arquivo.getAbsolutePath());
        } else {
            statusLabel.setText("Nenhum arquivo selecionado para " + tipo + ".");
        }
    }

    public static void main(String[] args) {
        SwingUtilities.invokeLater(() -> new PDFUploader().setVisible(true));
    }
}